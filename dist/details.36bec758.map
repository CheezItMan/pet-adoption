{"version":3,"sources":["node_modules/@reach/router/lib/history.js","src/components/modal.js","src/components/carousel.js","src/components/details.js"],"names":["Modal","props","React","Component","el","document","createElement","modalRoot","getElementById","appendChild","removeChild","children","Carousel","state","photos","active","handleIndexClick","event","setState","target","dataset","index","value","map","photo","media","filter","Details","petfinder","key","secret","loading","LoadableContent","loader","showModal","toggleModal","pet","get","output","id","then","data","breed","Array","isArray","breeds","join","name","animal","location","contact","city","description","catch","err"],"mappings":"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","file":"details.36bec758.map","sourceRoot":"..","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar getLocation = function getLocation(source) {\n  return _extends({}, source.location, {\n    state: source.history.state,\n    key: source.history.state && source.history.state.key || \"initial\"\n  });\n};\n\nvar createHistory = function createHistory(source, options) {\n  var listeners = [];\n  var location = getLocation(source);\n  var transitioning = false;\n  var resolveTransition = function resolveTransition() {};\n\n  return {\n    get location() {\n      return location;\n    },\n\n    get transitioning() {\n      return transitioning;\n    },\n\n    _onTransitionComplete: function _onTransitionComplete() {\n      transitioning = false;\n      resolveTransition();\n    },\n    listen: function listen(listener) {\n      listeners.push(listener);\n\n      var popstateListener = function popstateListener() {\n        location = getLocation(source);\n        listener({ location: location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return function () {\n        source.removeEventListener(\"popstate\", popstateListener);\n        listeners = listeners.filter(function (fn) {\n          return fn !== listener;\n        });\n      };\n    },\n    navigate: function navigate(to) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          state = _ref.state,\n          _ref$replace = _ref.replace,\n          replace = _ref$replace === undefined ? false : _ref$replace;\n\n      state = _extends({}, state, { key: Date.now() + \"\" });\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (transitioning || replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      transitioning = true;\n      var transition = new Promise(function (res) {\n        return resolveTransition = res;\n      });\n      listeners.forEach(function (listener) {\n        return listener({ location: location, action: \"PUSH\" });\n      });\n      return transition;\n    }\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Stores history entries in memory for testing or other platforms like Native\nvar createMemorySource = function createMemorySource() {\n  var initialPathname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n\n  var index = 0;\n  var stack = [{ pathname: initialPathname, search: \"\" }];\n  var states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener: function addEventListener(name, fn) {},\n    removeEventListener: function removeEventListener(name, fn) {},\n\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState: function pushState(state, _, uri) {\n        var _uri$split = uri.split(\"?\"),\n            pathname = _uri$split[0],\n            _uri$split$ = _uri$split[1],\n            search = _uri$split$ === undefined ? \"\" : _uri$split$;\n\n        index++;\n        stack.push({ pathname: pathname, search: search });\n        states.push(state);\n      },\n      replaceState: function replaceState(state, _, uri) {\n        var _uri$split2 = uri.split(\"?\"),\n            pathname = _uri$split2[0],\n            _uri$split2$ = _uri$split2[1],\n            search = _uri$split2$ === undefined ? \"\" : _uri$split2$;\n\n        stack[index] = { pathname: pathname, search: search };\n        states[index] = state;\n      }\n    }\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// global history - uses window.history as the source if available, otherwise a\n// memory history\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar getSource = function getSource() {\n  return canUseDOM ? window : createMemorySource();\n};\n\nvar globalHistory = createHistory(getSource());\nvar navigate = globalHistory.navigate;\n\n////////////////////////////////////////////////////////////////////////////////\n\nexports.globalHistory = globalHistory;\nexports.navigate = navigate;\nexports.createHistory = createHistory;\nexports.createMemorySource = createMemorySource;","import React from \"react\";\nimport { createPortal } from \"react-dom\";\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.el = document.createElement(\"div\");\n\n    this.modalRoot = document.getElementById(\"modal\");\n\n    this.modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    this.modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return createPortal(this.props.children, this.el);\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\n\nclass Carousel extends React.Component {\n  state = {\n    photos: [],\n    active: 0\n  };\n\n  static getDerivedStateFromProps({ media }) {\n    let photos = [];\n\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    return { photos };\n  }\n\n  handleIndexClick = event => {\n    this.setState({\n      active: +event.target.dataset.index\n    });\n  };\n\n  render() {\n    const { photos, active } = this.state;\n\n    return (\n      <div className=\"carousel\">\n        <img src={photos[active].value} alt=\"primary animal\" />\n        <div className=\"carousel-smaller\">\n          {photos.map((photo, index) => (\n            /* eslint-disable-next-line */\n            <img\n              onClick={this.handleIndexClick}\n              key={photo.value}\n              data-index={index}\n              src={photo.value}\n              className={index === active ? \"active\" : \"\"}\n              alt=\"animal thumbnail\"\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\nimport Loadable from \"react-loadable\";\nimport pf from \"petfinder-client\";\nimport { navigate } from \"@reach/router/lib/history\";\nimport Modal from \"./modal\";\n\nimport Carousel from \"./carousel\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nconst loading = () => <h1>Loading Content</h1>;\n\nconst LoadableContent = Loadable({\n  loader: () => import(\"./adoptmodalcontent\"),\n  loading\n});\n\nclass Details extends React.Component {\n  state = {\n    loading: true,\n    showModal: false\n  };\n\n  toggleModal = () => this.setState({ showModal: !this.state.showModal });\n\n  componentDidMount() {\n    petfinder.pet\n      .get({\n        output: \"full\",\n        id: this.props.id\n      })\n      .then(data => {\n        const pet = data.petfinder.pet;\n        let breed;\n\n        if (Array.isArray(data.petfinder.pet.breeds.breed)) {\n          breed = data.petfinder.pet.breeds.breed.join(\", \");\n        } else {\n          breed = data.petfinder.pet.breeds.breed;\n        }\n\n        this.setState({\n          name: pet.name,\n          animal: pet.animal,\n          location: `${pet.contact.city}, ${pet.contact.state}`,\n          description: pet.description,\n          media: pet.media,\n          loading: false,\n          breed\n        });\n      })\n      .catch(err => {\n        navigate(\"/\");\n      });\n  }\n  render() {\n    const {\n      animal,\n      breed,\n      location,\n      description,\n      media,\n      loading,\n      name,\n      showModal\n    } = this.state;\n\n    if (loading) {\n      return (\n        <div>\n          <h1>Loading</h1>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"details\">\n          <Carousel media={media} />\n          <div>\n            <h1>{name}</h1>\n            <h2>\n              {animal} - {breed} - {location}\n            </h2>\n            <button onClick={this.toggleModal}>Adopt {name}</button>\n            <p>{description}</p>\n            {showModal ? (\n              <Modal>\n                <LoadableContent toggleModal={this.toggleModal} name={name} />\n              </Modal>\n            ) : null}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Details;\n"]}